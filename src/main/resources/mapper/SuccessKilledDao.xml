<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.seckill.dao.SuccessKilledDao">

    <!--插入购买明细,可过滤重复秒杀-->
    <insert id="insertSuccessKilled">
        <!--当出现主键冲突时(即重复秒杀时)，会报错;不想让程序报错，加入ignore   0：成功 -->
        INSERT ignore INTO success_killed(seckill_id,user_phone,state)
        VALUES (#{seckillId},#{userPhone},0)
    </insert>

    <!--根据ID查询SuccessKilled并携带秒杀产品对象实体-->
    <select id="queryByIdWithSeckill" resultType="SuccessKilled">
        <!--根据seckillId查询SuccessKilled对象，并携带Seckill对象-->
        <!--如何告诉mybatis把结果映射到SuccessKill属性同时映射到Seckill属性-->
        <!--可以自由控制SQL语句-->
        <!--inner join(等值连接) on 只返回两个表中联结字段相等的行-->
        SELECT
        sk.seckill_id,
        sk.user_phone,
        sk.create_time,
        sk.state,
        <!--把表里的字段映射为实体对象的属性
         这是因为将查询的字段名都起一个和实体类属性名相同的别名
         这样实体类的属性名和查询结果中的字段名就可以一一对应上。
        -->
        s.seckill_id "seckill.seckill_id",
        s.name "seckill.name",
        s.number "seckill",
        s.start_time "seckill.start_time",
        s.end_time "seckill.end_time",
        s.create_time "seckill.create_time"
        FROM success_killed sk
        INNER JOIN seckill s ON sk.seckill_id = s.seckill_id
        WHERE sk.seckill_id = #{seckillId}
        AND sk.user_phone = #{userPhone}
    </select>

</mapper>